# Generated by Django 5.1.7 on 2025-04-27 15:55

from django.db import migrations

# Data to insert
INITIAL_CATEGORIES = [
    {'name': 'Пластиковая упаковка', 'description': 'Упаковочные материалы из пластика', 'image_url': 'plastic_packaging.png'},
    {'name': 'Картонно-бумажная продукция', 'description': 'Упаковочные изделия из картона и бумаги', 'image_url': 'paper_packaging.png'},
    {'name': 'Одноразовая посуда', 'description': 'Посуда для одинарного применения и', 'image_url': 'disposable_tableware.png'},
    {'name': 'Вспененная упаковка и алюминиевая фольга', 'description': 'Вспененная упаковка и алюминиевая фольга', 'image_url': 'Вспененная упаковка и алюминиевая фольга.png'},
    {'name': 'Кондитерские аксессуары', 'description': 'Кондитерские аксессуары', 'image_url': 'Кондитерские аксессуары.png'},
    {'name': 'Пищевая пленка и пакеты', 'description': 'Пищевая пленка и пакеты', 'image_url': 'Пищевая пленка и пакеты.png'},
    {'name': 'Санитарная гигиена', 'description': 'Санитарная гигиена', 'image_url': 'Санитарная гигиена'}, # Note: Value from SQL
    {'name': 'Кондитерское сырьё', 'description': 'Кондитерское сырьё', 'image_url': 'Кондитерское сырьё'}, # Note: Value from SQL
]

def populate_categories(apps, schema_editor):
    """
    Inserts the initial set of categories using the historical model state.
    """
    Category = apps.get_model('shop', 'CategoryModel')
    db_alias = schema_editor.connection.alias

    # Use bulk_create for efficiency, but specify pk requires specific DB support sometimes.
    # Individual create calls are safer for ensuring PKs are respected across DBs.
    for category_data in INITIAL_CATEGORIES:
        Category.objects.using(db_alias).create(**category_data)

    # Alternative using bulk_create (usually faster for lots of data):
    # category_objects = [Category(**data) for data in INITIAL_CATEGORIES]
    # Category.objects.using(db_alias).bulk_create(category_objects)


def unpopulate_categories(apps, schema_editor):
    """
    Deletes the categories inserted by this migration.
    """
    Category = apps.get_model('shop', 'CategoryModel')
    db_alias = schema_editor.connection.alias

    # Delete based on the IDs we inserted
    category_ids = [c['id'] for c in INITIAL_CATEGORIES]
    Category.objects.using(db_alias).filter(id__in=category_ids).delete()

class Migration(migrations.Migration):

    dependencies = [
        ('shop', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(populate_categories, reverse_code=unpopulate_categories),
    ]
